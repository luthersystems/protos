syntax = "proto3";

package connectors.v1;

import "annotations/v1/sensitive.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/luthersystems/protos/connectorhub/connectors/v1";

// Enables MQTT (Message Queuing Telemetry Transport) for lightweight IoT and real-time messaging.
message MQTTConfig {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "MQTT"
      description: "Enables MQTT (Message Queuing Telemetry Transport) for lightweight IoT and real-time messaging.\n@category: Events & Messaging"
    }
  };

  string protocol = 1;                                         // Protocol to use: mqtt, mqtts, or ws
  string host = 2;                                             // MQTT broker hostname or IP address
  int32 port = 3;                                              // Port on which the broker is listening (e.g., 1883 for mqtt, 8883 for mqtts)
  string username = 4;                                         // Optional username for authentication
  string password = 5 [(annotations.v1.sensitive) = true];     // Optional password for authentication
  string client_id = 6;                                        // Optional client ID to identify the MQTT client
  bool clean_session = 7;                                      // Whether to establish a clean session (true/false)
  bool use_ssl = 8;                                            // Whether to use SSL/TLS for secure communication
}
