syntax = "proto3";

package connectors.v1;

import "annotations/v1/sensitive.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/luthersystems/protos/connectorhub/connectors/v1";

// Connects to Camunda Operate for process inspection.
message CamundaInspectConfig {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Camunda Inspect"
      description: "Connects to Camunda Operate for process inspection.\n@category: Workflow & Automation"
    }
  };

  string operate_url = 1;                                      // Base URL for Camunda Operate API (e.g., https://camunda.local/operate)
  string username = 2;                                         // Username for basic authentication
  string password = 3 [(annotations.v1.sensitive) = true];     // Password for basic authentication
  string api_token = 4 [(annotations.v1.sensitive) = true];    // Optional: bearer token for token-based auth (overrides username/password)
}

// Connects to Camunda Tasklist API to manage human tasks within process automation workflows.
message CamundaStartConfig {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Camunda Tasklist"
      description: "Connects to Camunda Tasklist API to manage human tasks within process automation workflows.\n@category: Workflow & Automation"
    }
  };

  string gateway_url = 1;                                      // Base URL for Camunda Gateway API (e.g., https://camunda.local/gateway)
  string username = 2;                                         // Username for basic authentication
  string password = 3 [(annotations.v1.sensitive) = true];     // Password for basic authentication
  string api_token = 4 [(annotations.v1.sensitive) = true];    // Optional: bearer token for token-based auth (overrides username/password)
}
