syntax = "proto3";

package connectors.v1;

import "annotations/v1/sensitive.proto";
import "grpc/gateway/protoc_gen_openapiv2/options/annotations.proto";

option go_package = "buf.build/gen/go/luthersystems/protos/protocolbuffers/go/connectors/v1";

// Connects to Allianz's CISL API standardization system for integrating with Allianz's insurance and financial services APIs.
message CISLConfig {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "CISL"
      description: "Connects to Allianz's CISL API standardization system for integrating with Allianz's insurance and financial services APIs.\n@category: Business Apps"
    }
  };

  string token_endpoint = 1;                                   // OAuth2 token endpoint
  string client_id = 2;                                        // OAuth2 client ID
  string client_secret = 3 [(annotations.v1.sensitive) = true]; // OAuth2 client secret
  string grant_type = 4;                                       // OAuth2 grant type (e.g., client_credentials)
  string scopes = 5;                                           // Optional: scopes for API operations
  int32 access_token_expiry = 6;                               // Optional: token expiration time in seconds
  bool use_tls = 7;                                            // Whether to use TLS for secure communication
}
