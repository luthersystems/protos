syntax = "proto3";

package connectors.v1;

option go_package = "buf.build/gen/go/luthersystems/protos/protocolbuffers/go/connectors/v1";

import "common/v1/exception.proto";

import "connectors/v1/camunda.proto";
import "connectors/v1/email.proto";
import "connectors/v1/equifax.proto";
import "connectors/v1/gocardless.proto";
import "connectors/v1/invoice_ninja.proto";
import "connectors/v1/pdfserv.proto";
import "connectors/v1/postgres.proto";
import "connectors/v1/stripe.proto";
import "connectors/v1/sftp.proto";
import "connectors/v1/mongodb.proto";
import "connectors/v1/slack.proto";
import "connectors/v1/twilio.proto";
import "connectors/v1/oracledb.proto";
import "connectors/v1/mysql.proto";
import "connectors/v1/kafka.proto";
import "connectors/v1/azureservicebus.proto";
import "connectors/v1/elasticsearch.proto";
import "connectors/v1/rabbitmq.proto";
import "connectors/v1/activemq.proto";

// Enum for different connector types.
enum Kind {
  KIND_UNSPECIFIED = 0;
  KIND_CAMUNDA_INSPECT = 1;
  KIND_CAMUNDA_START = 2;
  KIND_EMAIL = 3;
  KIND_EQUIFAX = 4;
  KIND_GOCARDLESS = 5;
  KIND_INVOICE_NINJA = 6;
  KIND_PDFSERV = 7;
  KIND_POSTGRES = 8;
  KIND_STRIPE = 9;
  KIND_SFTP = 10;
  KIND_MONGODB = 11;
  KIND_SLACK = 12;
  KIND_TWILIO = 13;
  KIND_ORACLEDB = 14;
  KIND_MYSQL = 15;
  KIND_KAFKA = 16;
  KIND_AZURE_SERVICE_BUS = 17;
  KIND_ELASTICSEARCH = 18;
  KIND_RABBITMQ = 19;
  KIND_ACTIVEMQ = 20;
}

// ConnectorConfig is used to create connections to systems.
message ConnectorConfig {
  string msp = 1;
  string name = 2;
  bool mock = 3;
  oneof config {
    CamundaInspectConfig camunda_inspect = 5;
    CamundaStartConfig camunda_start = 6;
    EmailConfig email = 7;
    EquifaxConfig equifax = 8;
    GoCardlessConfig gocardless = 9;
    InvoiceNinjaConfig invoice_ninja = 10;
    PDFServConfig pdfserv = 11;
    PostgresConfig postgres = 12;
    StripeConfig stripe = 13; 
    SFTPConfig sftp = 14; 
    MongoDBConfig mongodb = 15;
    SlackConfig slack = 16;
    TwilioConfig twilio = 17;
    OracleDBConfig oracledb = 18;
    MySQLConfig mysql = 19;
    KafkaConfig kafka = 20;
    AzureServiceBusConfig azure_service_bus = 21;
    ElasticsearchConfig elasticsearch = 22;
    RabbitMQConfig rabbitmq = 23;
    ActiveMQConfig activemq = 24;
  }
}

// Request message for testing a connector's connection settings
message TestConnectionRequest {
  ConnectorConfig connector = 1;
}

// Response message for connection testing
message TestConnectionResponse {
  oneof result {
    common.v1.Exception exception = 1; // ðŸ”¹ Exception details if an error occurred
    ConnectionSuccess success = 2;     // ðŸ”¹ Successful test result
  }
}

// Success message if connection test is successful
message ConnectionSuccess {
  string message = 1;  // e.g., "Connection successful"
}
