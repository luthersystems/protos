syntax = "proto3";

package connectors.v1;

option go_package = "buf.build/gen/go/luthersystems/protos/protocolbuffers/go/connectors/v1";

import "common/v1/exception.proto";

import "connectors/v1/camunda.proto";
import "connectors/v1/email.proto";
import "connectors/v1/equifax.proto";
import "connectors/v1/gocardless.proto";
import "connectors/v1/invoice_ninja.proto";
import "connectors/v1/pdfserv.proto";
import "connectors/v1/postgres.proto";
import "connectors/v1/stripe.proto";
import "connectors/v1/sftp.proto";
import "connectors/v1/mongodb.proto";
import "connectors/v1/slack.proto";
import "connectors/v1/twilio.proto";
import "connectors/v1/oracledb.proto";
import "connectors/v1/mysql.proto";
import "connectors/v1/kafka.proto";
import "connectors/v1/azure_servicebus.proto";
import "connectors/v1/elasticsearch.proto";
import "connectors/v1/rabbitmq.proto";
import "connectors/v1/activemq.proto";
import "connectors/v1/azure_eventhub.proto";
import "connectors/v1/azure_blob.proto";
import "connectors/v1/hadoop.proto";
import "connectors/v1/onfido.proto";
import "connectors/v1/salesforce.proto";
import "connectors/v1/celonis.proto";
import "connectors/v1/cisl.proto";
import "connectors/v1/docusign.proto";
import "connectors/v1/snmp.proto";
import "connectors/v1/yardi.proto";
import "connectors/v1/uipath.proto";
import "connectors/v1/twenty7tec.proto";
import "connectors/v1/soap_xml.proto";
import "connectors/v1/rest_json.proto";
import "connectors/v1/grpc.proto";
import "connectors/v1/aws_dynamodb.proto";
import "connectors/v1/aws_s3.proto";
import "connectors/v1/aws_sqs.proto";
import "connectors/v1/aws_sns.proto";
import "connectors/v1/ons.proto";
import "connectors/v1/magic_link.proto";
import "connectors/v1/aws_cognito.proto";
import "connectors/v1/azure_b2c.proto";
import "connectors/v1/auth0.proto";
import "connectors/v1/google_sheets.proto";
import "connectors/v1/discord.proto";
import "connectors/v1/notion.proto";
import "connectors/v1/redis.proto";
import "connectors/v1/mqtt.proto";
import "connectors/v1/snowflake.proto";
import "connectors/v1/pagerduty.proto";
import "connectors/v1/box.proto";
import "connectors/v1/grafana.proto";
import "connectors/v1/databricks.proto";
import "connectors/v1/datadog.proto";
import "connectors/v1/influxdb.proto";
import "connectors/v1/ldap.proto";
import "connectors/v1/microsoft_teams.proto";
import "connectors/v1/okta.proto";
import "connectors/v1/microsoft_excel365.proto";
import "connectors/v1/google_bigquery.proto";
import "connectors/v1/microsoft_dynamics.proto";
import "connectors/v1/jira_cloud.proto";
import "connectors/v1/google_chat.proto";
import "connectors/v1/openai_chatgpt.proto";
import "connectors/v1/anthropic_claude.proto";
import "connectors/v1/elevenlabs.proto";
import "connectors/v1/google_gemini.proto";
import "connectors/v1/aws_rekognition.proto";
import "connectors/v1/aws_polly.proto";
import "connectors/v1/ollama.proto";
import "connectors/v1/pinecone.proto";
import "connectors/v1/huggingface_inference.proto";
import "connectors/v1/perplexity.proto";
import "connectors/v1/weaviate.proto";
import "connectors/v1/sap_s4hana.proto";
import "connectors/v1/zendesk.proto";
import "connectors/v1/hubspot.proto";
import "connectors/v1/servicenow.proto";
import "connectors/v1/workday.proto";

// Enum for different connector types.
enum Kind {
  KIND_UNSPECIFIED = 0;
  KIND_CAMUNDA_INSPECT = 1;
  KIND_CAMUNDA_START = 2;
  KIND_EMAIL = 3;
  KIND_EQUIFAX = 4;
  KIND_GOCARDLESS = 5;
  KIND_INVOICE_NINJA = 6;
  KIND_PDFSERV = 7;
  KIND_POSTGRES = 8;
  KIND_STRIPE = 9;
  KIND_SFTP = 10;
  KIND_MONGODB = 11;
  KIND_SLACK = 12;
  KIND_TWILIO = 13;
  KIND_ORACLEDB = 14;
  KIND_MYSQL = 15;
  KIND_KAFKA = 16;
  KIND_AZURE_SERVICE_BUS = 17;
  KIND_ELASTICSEARCH = 18;
  KIND_RABBITMQ = 19;
  KIND_ACTIVEMQ = 20;
  KIND_AZURE_EVENT_HUB = 21;
  KIND_AZURE_BLOB = 22;
  KIND_HADOOP = 23;
  KIND_ONFIDO = 24;
  KIND_SALESFORCE = 25;
  KIND_CELONIS = 26;
  KIND_CISL = 27;
  KIND_DOCUSIGN = 28;
  KIND_SNMP = 29;
  KIND_YARDI = 30;
  KIND_UIPATH = 31;
  KIND_TWENTY7TEC = 32;
  KIND_SOAP_XML = 33;
  KIND_REST_JSON = 34;
  KIND_GRPC = 35;
  KIND_AWS_DYNAMODB = 36;
  KIND_AWS_S3 = 37;
  KIND_AWS_SQS = 38;
  KIND_AWS_SNS = 39;
  KIND_ONS = 40;
  KIND_MAGIC_LINK = 41;
  KIND_AWS_COGNITO = 42;
  KIND_AZURE_B2C = 43;
  KIND_AUTH0 = 44;
  KIND_GOOGLE_SHEETS = 45;
  KIND_DISCORD = 46;
  KIND_NOTION = 47;
  KIND_REDIS = 48;
  KIND_MQTT = 49;
  KIND_SNOWFLAKE = 50;
  KIND_PAGERDUTY = 51;
  KIND_BOX = 52;
  KIND_GRAFANA = 53;
  KIND_DATABRICKS = 54;
  KIND_DATADOG = 55;
  KIND_INFLUXDB = 56;
  KIND_LDAP = 57;
  KIND_MICROSOFT_TEAMS = 58;
  KIND_OKTA = 59;
  KIND_EXCEL365 = 60;
  KIND_BIGQUERY = 61;
  KIND_MICROSOFT_DYNAMICS = 62;
  KIND_JIRA_CLOUD = 63;
  KIND_GOOGLE_CHAT = 64;
  KIND_OPENAI_CHATGPT = 65;
  KIND_ANTHROPIC_CLAUDE = 66;
  KIND_ELEVENLABS = 67;
  KIND_GOOGLE_GEMINI = 68;
  KIND_AWS_REKOGNITION = 69;
  KIND_AWS_POLLY = 70;
  KIND_OLLAMA = 71;
  KIND_PINECONE = 72;
  KIND_HUGGINGFACE_INFERENCE = 73;
  KIND_PERPLEXITY = 74;
  KIND_WEAVIATE = 75;
  KIND_SAP_S4HANA = 76;
  KIND_ZENDESK = 77;
  KIND_HUBSPOT = 78;
  KIND_SERVICENOW = 79;
  KIND_WORKDAY = 80;
}

// ConnectorConfig is used to create connections to systems.
message ConnectorConfig {
  // MSP is the name of the organisation that will run the connector.
  string msp = 1;
  // Name is the name of the connector.
  string name = 2;
  // Mock will use a test version of the connector.
  bool mock = 3;
  oneof config {
    CamundaInspectConfig camunda_inspect = 5;
    CamundaStartConfig camunda_start = 6;
    EmailConfig email = 7;
    EquifaxConfig equifax = 8;
    GoCardlessConfig gocardless = 9;
    InvoiceNinjaConfig invoice_ninja = 10;
    PDFServConfig pdfserv = 11;
    PostgresConfig postgres = 12;
    StripeConfig stripe = 13; 
    SFTPConfig sftp = 14; 
    MongoDBConfig mongodb = 15;
    SlackConfig slack = 16;
    TwilioConfig twilio = 17;
    OracleDBConfig oracledb = 18;
    MySQLConfig mysql = 19;
    KafkaConfig kafka = 20;
    AzureServiceBusConfig azure_service_bus = 21;
    ElasticsearchConfig elasticsearch = 22;
    RabbitMQConfig rabbitmq = 23;
    ActiveMQConfig activemq = 24;
    AzureEventHubConfig azureeventhub = 25;
    AzureBlobConfig azure_blob = 26;
    HadoopConfig hadoop = 27;
    OnfidoConfig onfido = 28;
    SalesforceConfig salesforce = 29;
    CelonisConfig celonis = 30;
    CISLConfig cisl = 31;
    DocuSignConfig docusign = 32;
    SNMPConfig snmp = 33;
    YardiConfig yardi = 34;
    UiPathConfig uipath = 35;
    Twenty7TecConfig twenty7tec = 36;
    SOAPXMLConfig soap_xml = 37;
    RESTJSONConfig rest_json = 38;
    GRPCConfig grpc = 39;
    AWSDynamoDBConfig aws_dynamodb = 40;
    AWSS3Config aws_s3 = 41;
    AWSSQSConfig aws_sqs = 42;
    AWSSNSConfig aws_sns = 43;
    ONSConfig ons = 44;
    MagicLinkConfig magic_link = 45;
    AWSCognitoConfig aws_cognito = 46;
    AzureB2CConfig azure_b2c = 47;
    Auth0Config auth0 = 48;
    GoogleSheetsConfig google_sheets = 49;
    DiscordConfig discord = 50;
    NotionConfig notion = 51;
    RedisConfig redis = 52;
    MQTTConfig mqtt = 53;
    SnowflakeConfig snowflake = 54;
    PagerDutyConfig pagerduty = 55;
    BoxConfig box = 56;
    GrafanaConfig grafana = 57;
    DatabricksConfig databricks = 58;
    DatadogConfig datadog = 59;
    InfluxDBConfig influxdb = 60;
    LDAPConfig ldap = 61;
    MicrosoftTeamsConfig microsoft_teams = 62;
    OktaConfig okta = 63;
    MicrosoftExcel365Config excel365 = 64;
    GoogleBigQueryConfig bigquery = 65;
    MicrosoftDynamicsConfig microsoft_dynamics = 66;
    JiraCloudConfig jira_cloud = 67;
    GoogleChatConfig google_chat = 68;
    OpenAIChatGPTConfig openai_chatgpt = 69;
    AnthropicClaudeConfig anthropic_claude = 70;
    ElevenLabsConfig elevenlabs = 71;
    GoogleGeminiConfig google_gemini = 72;
    AWSRekognitionConfig aws_rekognition = 73;
    AWSPollyConfig aws_polly = 74;
    OllamaConfig ollama = 75;
    PineconeConfig pinecone = 76;
    HuggingFaceInferenceConfig huggingface_inference = 77;
    PerplexityConfig perplexity = 78;
    WeaviateConfig weaviate = 79;
    SAPS4HANAConfig sap_s4hana = 80;
    ZendeskConfig zendesk = 81;
    HubSpotConfig hubspot = 82;
    ServiceNowConfig servicenow = 83;
    WorkdayConfig workday = 84;
  }
}

// Request message for testing a connector's connection settings
message TestConnectionRequest {
  ConnectorConfig connector = 1; // Connector settings to test.
}

// Response message for connection testing
message TestConnectionResponse {
  oneof result {
    common.v1.Exception exception = 1; // ðŸ”¹ Exception details if an error occurred
    ConnectionSuccess success = 2;     // ðŸ”¹ Successful test result
  }
}

// Success message if connection test is successful
message ConnectionSuccess {
  string message = 1;  // e.g., "Connection successful"
}
